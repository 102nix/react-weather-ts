[{"/home/kostya/Документы/coding/react/TS/weather-react/src/App.tsx":"1","/home/kostya/Документы/coding/react/TS/weather-react/src/components/Weather/Weather.tsx":"2","/home/kostya/Документы/coding/react/TS/weather-react/src/index.tsx":"3","/home/kostya/Документы/coding/react/TS/weather-react/src/reportWebVitals.ts":"4","/home/kostya/Документы/coding/react/TS/weather-react/src/redux/store.ts":"5","/home/kostya/Документы/coding/react/TS/weather-react/src/api/api.ts":"6","/home/kostya/Документы/coding/react/TS/weather-react/src/redux/weatherReducer.ts":"7","/home/kostya/Документы/coding/react/TS/weather-react/src/components/DateTime/DateTime.tsx":"8","/home/kostya/Документы/coding/react/TS/weather-react/src/components/SelectCity/SelectCity.tsx":"9","/home/kostya/Документы/coding/react/TS/weather-react/src/components/InputCity/InputCity.tsx":"10","/home/kostya/Документы/coding/react/TS/weather-react/src/components/WeatherForecast/WeatherForecast.tsx":"11","/home/kostya/Документы/coding/react/TS/weather-react/src/components/TodayWeather/TodayWeather.tsx":"12","/home/kostya/Документы/coding/react/TS/weather-react/src/redux/weatherAC.ts":"13","/home/kostya/Документы/coding/react/TS/weather-react/src/types/ACWeatherTypes.ts":"14","/home/kostya/Документы/coding/react/TS/weather-react/src/redux/getDatesFromFiveDays.ts":"15"},{"size":910,"mtime":1615063672945,"results":"16","hashOfConfig":"17"},{"size":4176,"mtime":1615208482389,"results":"18","hashOfConfig":"17"},{"size":766,"mtime":1606812238647,"results":"19","hashOfConfig":"17"},{"size":425,"mtime":1606384518987,"results":"20","hashOfConfig":"17"},{"size":417,"mtime":1615107326237,"results":"21","hashOfConfig":"17"},{"size":1521,"mtime":1615125586420,"results":"22","hashOfConfig":"17"},{"size":1121,"mtime":1615108606741,"results":"23","hashOfConfig":"17"},{"size":939,"mtime":1614763113152,"results":"24","hashOfConfig":"17"},{"size":1331,"mtime":1614763850084,"results":"25","hashOfConfig":"17"},{"size":479,"mtime":1614763831020,"results":"26","hashOfConfig":"17"},{"size":945,"mtime":1615109035477,"results":"27","hashOfConfig":"17"},{"size":2449,"mtime":1614763275026,"results":"28","hashOfConfig":"17"},{"size":2440,"mtime":1615122125804,"results":"29","hashOfConfig":"17"},{"size":1217,"mtime":1615108664360,"results":"30","hashOfConfig":"17"},{"size":1419,"mtime":1615119506295,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19vgfdz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kostya/Документы/coding/react/TS/weather-react/src/App.tsx",["66"],"/home/kostya/Документы/coding/react/TS/weather-react/src/components/Weather/Weather.tsx",["67","68"],"import React, { useEffect } from 'react'\nimport './Weather.scss'\nimport { connect } from 'react-redux'\nimport { onGetWeather, onGetWeatherName, onGetWeatherGeo, onGetForecastName, onGetHoursWeather } from '../../redux/weatherAC'\n//Components:\nimport { DateTime } from '../DateTime/DateTime'\nimport { SelectCity } from '../SelectCity/SelectCity'\nimport { WeatherForecast } from '../WeatherForecast/WeatherForecast'\nimport { InputCity } from '../InputCity/InputCity'\nimport { TodayWeather } from '../TodayWeather/TodayWeather'\n//types:\nimport { WeatherDispatchProps } from '../../types/componentsTypes'\nimport { AppStateType } from '../../redux/store'\nimport { InitialStateType } from '../../types/ACWeatherTypes'\n// небольшой снег; небольшой дождь; туман; пасмурно; переменная облачность\n\nconst Weather: React.FC<InitialStateType & WeatherDispatchProps> = props => {\n\n  useEffect(() => {\n    handlerGeo()\n  }, [])\n\n  useEffect(() => {\n    if (props.cityName !== null) {\n      const city: string = props.cityName\n      props.onGetForecastName(city)\n    }\n  }, [props.cityName])\n\n  const showPosition = (position: any) => {\n    props.onGetWeatherGeo(position.coords.latitude, position.coords.longitude)\n  }\n\n  const handlerGeo = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      {\n        props.cityName !== null ?\n        <>\n          <div className=\"row date-time\">\n            <DateTime\n              cityName={props.cityName}\n              countryName={props.countryName}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-6 today-weather-all\">\n              <TodayWeather\n                temperatureC={props.temperatureC}\n                weatherFirst={props.weatherFirst}\n                windSpeedK={props.windSpeedK}\n                humidity={props.humidity}\n              />\n            </div>\n            <div className=\"col-12 col-lg-6 weather-forecast\">\n              <WeatherForecast weatherRange={props.weatherRange}/>\n            </div>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col-12 col-lg-4\">\n              <SelectCity onGetWeatherName={props.onGetWeatherName} />\n            </div>\n            <div className=\"col-12 col-lg-4\">\n              <button className=\"btn btn-link\" onClick={handlerGeo}>Определить местоположение</button>\n            </div>\n            <div className=\"col-12 col-lg-4\">\n              <InputCity onGetWeatherName={props.onGetWeatherName} />\n            </div>\n          </div>\n        </>\n        : <>\n        <div className=\"row title-no-geo text-center\">\n          Город по данным геолокации не опредлён!\n        </div>\n        <div className=\"row mt-5 no-geo-for-city\">\n          <div className=\"select-city-no-geo\">\n            <div className=\"note-select-city\">Выберите город из списка:</div>\n              <SelectCity onGetWeatherName={props.onGetWeatherName} />\n            <div>или:</div>\n          </div>\n          <div className=\"write-city-no-geo\">\n            <div className=\"note-write-city\">Напишите город:</div>\n            <InputCity onGetWeatherName={props.onGetWeatherName}/>\n          </div>\n        </div>\n        </>\n      }\n    </div>\n  )\n}\nconst mapStateToProps = (state: AppStateType): InitialStateType => {\n  return {\n    cityName: state.weatherReducer.cityName,\n    countryName: state.weatherReducer.countryName,\n    temperatureC: state.weatherReducer.temperatureC,\n    windSpeedK: state.weatherReducer.windSpeedK,\n    weatherFirst: state.weatherReducer.weatherFirst,\n    weatherSecond: state.weatherReducer.weatherSecond,\n    humidity: state.weatherReducer.humidity,\n    cityNameRange: state.weatherReducer.cityNameRange,\n    weatherRange: state.weatherReducer.weatherRange,\n  }\n}\nconst connector = connect(mapStateToProps, { onGetWeather, onGetWeatherName, onGetWeatherGeo, onGetForecastName, onGetHoursWeather })\nexport default connector(Weather)","/home/kostya/Документы/coding/react/TS/weather-react/src/index.tsx",[],["69","70"],"/home/kostya/Документы/coding/react/TS/weather-react/src/reportWebVitals.ts",[],["71","72"],"/home/kostya/Документы/coding/react/TS/weather-react/src/redux/store.ts",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/api/api.ts",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/redux/weatherReducer.ts",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/components/DateTime/DateTime.tsx",[],["73","74"],"/home/kostya/Документы/coding/react/TS/weather-react/src/components/SelectCity/SelectCity.tsx",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/components/InputCity/InputCity.tsx",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/components/WeatherForecast/WeatherForecast.tsx",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/components/TodayWeather/TodayWeather.tsx",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/redux/weatherAC.ts",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/types/ACWeatherTypes.ts",[],"/home/kostya/Документы/coding/react/TS/weather-react/src/redux/getDatesFromFiveDays.ts",[],{"ruleId":"75","severity":1,"message":"76","line":25,"column":6,"nodeType":"77","endLine":25,"endColumn":8,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":21,"column":6,"nodeType":"77","endLine":21,"endColumn":8,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"81","line":28,"column":6,"nodeType":"77","endLine":28,"endColumn":22,"suggestions":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"83","replacedBy":"89"},{"ruleId":"85","replacedBy":"90"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentDate'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'handlerGeo'. Either include it or remove the dependency array.",["92"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["93"],"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],["94"],["95"],{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [currentDate]",{"range":"102","text":"103"},"Update the dependencies array to be: [handlerGeo]",{"range":"104","text":"105"},"Update the dependencies array to be: [props, props.cityName]",{"range":"106","text":"107"},[790,792],"[currentDate]",[909,911],"[handlerGeo]",[1058,1074],"[props, props.cityName]"]